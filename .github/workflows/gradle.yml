name: Java CI with Gradle

on:
  push:
    branches: [ release ]

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GIT_TOKEN }}
          submodules: true
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name : Copy properties
        env:
          application_yml : ${{ secrets.APPLICATION }}
          application_yml_dir : src/main/resources
          application_yml_FILE_NAME : application.yml
        run: |
          mkdir src/main/resources
          echo $application_yml | base64 --decode > $application_yml_dir/$application_yml_FILE_NAME
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build
      - name: Docker build
        run: |
          docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
          docker build -t spring-cicd .
          docker tag spring-cicd chwangmin/spring-cicd:${GITHUB_SHA::7}
          docker push chwangmin/spring-cicd:${GITHUB_SHA::7}
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          envs: GITHUB_SHA
          script: |
            docker stop server
            docker pull chwangmin/spring-cicd:${GITHUB_SHA::7}
            docker tag chwangmin/spring-cicd:${GITHUB_SHA::7} spring-cicd
            docker run -d --rm --name server -p 80:8080 spring-cicd

      - name: redis deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script_stop: true # Stop the script if any command fails.
          script_timeout: 60 # Timeout after 60 seconds.
          script: |
              cd docker # Change this to the path of your docker directory.
              docker-compose up --build -d # Build and deploy the docker-compose.yml file.